#install.packages("MPV")
library("MPV")
library("knitr")
solarData <- table.b2
fit <- lm( y ~ x4, data = solarData)
lm( y ~ x4, data = solarData)
plot(solarData$x4, solarData$y,
xlab = "radial deflection of deflected rays (x4)",
ylab = "total heat flux (y)",
main = "Model")
abline(fit)
# here, we want to conduct a hypothesis test for our regression coefficient. Our H0 (null hypothesis) is that there is no relationship between x4 and y (B1 is 0). The alternative hypothesis is that B1 is non 0. In this case, the previous graph more strongly suggests that B1 is less than 0, or an inverse relationship.
summary(fit)
anova(fit)
conf_interval <- confint(fit, level = 0.99)
print(conf_interval)
#previously printed the summary, but this will show only r^2
summary(fit)$r.squared
# Define the new data point
new_data <- data.frame(x4 = 16.5)
# Predict the mean heat flux and obtain confidence intervals
prediction <- predict(fit, newdata = new_data, interval = "confidence", level = 0.95)
# Print the prediction and confidence intervals
print(prediction)
houseData <- table.b4
lm(y ~ x1, data = houseData)
homeFit <- lm(y ~ x1, data = houseData)
plot(houseData$x1,houseData$y,
xlab = "Current Taxes",
ylab = "Selling Price",
main = "Current Taxes vs. House Selling Price")
abline(homeFit)
# here, we want to conduct a hypothesis test for our regression coefficient. Our H0 (null hypothesis) is that there is no relationship between x1 and y (B1 is 0). The alternative hypothesis is that B1 is non 0. In this case, the previous graph more strongly suggests that B1 is greater than 0, or a positive relationship.
summary(homeFit)
summary(homeFit)$r.squared
confint(homeFit, level = 0.95)
View(houseData)
# NOTE: x1 is documented to be represented in thousands, so we will use 750/1000 = .75
new_data <- data.frame(x1 = .75)
prediction <- predict(homeFit, newdata = new_data, interval = "confidence", level = 0.95)
# NOTE: x1 is documented to be represented in thousands, so we will use 750/1000 = .75
new_data <- data.frame(x1 = .75)
predict(homeFit, newdata = new_data, interval = "confidence", level = 0.95)
chemData <- data("p2.7")
chemData.head()
chemData <- data("p2.7")
chemData.head
chemData <- data("p2.7")
head(chemData)
chemData <- data(p2.7)
head(chemData)
chemData <- data(p2.7)
head(chemData)
chemData <- data(p2.7)
head(chemData, n= 20)
chemData <- p2.7
head(chemData, n= 20)
chemData <- p2.7
chemFit = lm(purity ~ hydro, data = chemData)
plot(chemData$hydro, chemData$purity,
xlab = "Hydrocarbons",
ylab = "Purity",
main = "Hydrocarbons vs. Purity")
abline(chemFit)
chemData <- p2.7
chemFit = lm(purity ~ hydro, data = chemData)
print(chemFit)
plot(chemData$hydro, chemData$purity,
xlab = "Hydrocarbons",
ylab = "Purity",
main = "Hydrocarbons vs. Purity")
abline(chemFit)
# we can set up our null hypothesis to be: H0:β1 = 0
# Our alternative hypothesis, H_a is β1 != 0
# we can do this through a hypothesis t test. we can find the p value by calling:
summary(chemFit)
summary(chemFit)$r.squared
confint(chemFit, level = 0.95)
new_data = data.frame(hydro = 1.00)
predict(chemFit, newdata = new_data, interval = "confidence", level = 0.95)
# we are using the same data as Q3
summary(chemFit)$r
# we are using the same data as Q3
cor(data$oxygen_purity, data$hydrocarbon_percentage)
# we are using the same data as Q3
cor(data$oxygen_purity, data$hydrocarbon_percentage)
# we are using the same data as Q3
cor(data$purity, data$hydro)
# we are using the same data as Q3
cor(chemData$purity, chemData$hydro)
sqrt(summary(chemFit)$r.squared)
cor.test(chemData$purity, chemData$hydro)
#install.packages("MPV")
library("MPV")
library("knitr")
solarData <- table.b2
fit <- lm( y ~ x4, data = solarData)
lm( y ~ x4, data = solarData)
plot(solarData$x4, solarData$y,
xlab = "radial deflection of deflected rays (x4)",
ylab = "total heat flux (y)",
main = "Model")
abline(fit)
# here, we want to conduct a hypothesis test for our regression coefficient. Our H0 (null hypothesis) is that there is no relationship between x4 and y (B1 is 0). The alternative hypothesis is that B1 is non 0. In this case, the previous graph more strongly suggests that B1 is less than 0, or an inverse relationship.
summary(fit)
anova(fit)
conf_interval <- confint(fit, level = 0.99)
print(conf_interval)
#previously printed the summary, but this will show only r^2
summary(fit)$r.squared
# Define the new data point
new_data <- data.frame(x4 = 16.5)
# Predict the mean heat flux and obtain confidence intervals
prediction <- predict(fit, newdata = new_data, interval = "confidence", level = 0.95)
# Print the prediction and confidence intervals
print(prediction)
houseData <- table.b4
lm(y ~ x1, data = houseData)
homeFit <- lm(y ~ x1, data = houseData)
plot(houseData$x1,houseData$y,
xlab = "Current Taxes",
ylab = "Selling Price",
main = "Current Taxes vs. House Selling Price")
abline(homeFit)
# here, we want to conduct a hypothesis test for our regression coefficient. Our H0 (null hypothesis) is that there is no relationship between x1 and y (B1 is 0). The alternative hypothesis is that B1 is non 0. In this case, the previous graph more strongly suggests that B1 is greater than 0, or a positive relationship.
summary(homeFit)
summary(homeFit)$r.squared
confint(homeFit, level = 0.95)
# NOTE: x1 is documented to be represented in thousands, so we will use 750/1000 = .75
new_data <- data.frame(x1 = .75)
predict(homeFit, newdata = new_data, interval = "confidence", level = 0.95)
chemData <- p2.7
chemFit = lm(purity ~ hydro, data = chemData)
print(chemFit)
plot(chemData$hydro, chemData$purity,
xlab = "Hydrocarbons",
ylab = "Purity",
main = "Hydrocarbons vs. O2 Purity")
abline(chemFit)
# we can set up our null hypothesis to be: H0:β1 = 0
# Our alternative hypothesis, H_a is β1 != 0
# since no alpha value is given, we can assume to have a two tailed test with an alpha of .1
# we can conduct this with a hypothesis t test. we can find the p value by calling:
summary(chemFit)
summary(chemFit)$r.squared
confint(chemFit, level = 0.95)
new_data = data.frame(hydro = 1.00)
predict(chemFit, newdata = new_data, interval = "confidence", level = 0.95)
# we are using the same data as Q3
# two ways to calculate it!
cor(chemData$purity, chemData$hydro)
sqrt(summary(chemFit)$r.squared)
# H0 :ρ = 0; our alternate hypothesis is that ρ != 0. We can conduct Pearson's product moment correlation.
cor.test(chemData$purity, chemData$hydro)
# can call the same function as before as it also gives us a 95% CI
cor.test(chemData$purity, chemData$hydro)
simpleSolventFit <- lm(y ~ x2, data = solventData)
#note:
# x1 Ratio of 2-methoxyethanol to 1,2-dimethoxyethane
# x2 Temperature (in degrees Celsius)
# y Kinematic viscosity (.000001 m2/s
solventData <- table.b10
#install.packages("MPV")
library("MPV")
library("knitr")
#note:
# x1 Ratio of 2-methoxyethanol to 1,2-dimethoxyethane
# x2 Temperature (in degrees Celsius)
# y Kinematic viscosity (.000001 m2/s
solventData <- table.b10
solventFit <- lm(y ~ x1 + x2, data = solventData)
solventFit
anova(solventFit)
summary(solventFit)
simpleSolventFit <- lm(y ~ x2, data = solventData)
summary(simpleSolventFit)
summary(solventFit)
